syntax = "proto3";
package influxdata.iox.schema.v1;
option go_package = "github.com/influxdata/iox/schema/v1";

import "influxdata/iox/column_type/v1/type.proto";

service SchemaService {
  // Get the schema for a namespace and, optionally, a table within that namespace
  rpc GetSchema(GetSchemaRequest) returns (GetSchemaResponse);

  // Upsert the schema for the specified namespace and table. Returns a namespace schema
  // containing only the upserted table's schema.
  rpc UpsertSchema(UpsertSchemaRequest) returns (UpsertSchemaResponse);
}

message GetSchemaRequest {
  // The namespace for which to fetch the schema
  string namespace = 1;

  // If specified, the table in the namespace for which to fetch the schema. If not specified, the
  // schemas for all tables in this namespace will be returned.
  optional string table = 2;
}

message GetSchemaResponse {
  NamespaceSchema schema = 1;
}

message UpsertSchemaRequest {
  oneof namespace_target {
    // The name of the namespace in which to upsert the schema
    string namespace_name = 1 [deprecated = true];
    // The id of the namespace in which to upsert the schema
    int64 namespace_id = 4;
  }

  // The table for which to upsert the schema
  string table = 2;

  // Map of Column Name -> Column Type to upsert into this table's schema
  map<string, influxdata.iox.column_type.v1.ColumnType> columns = 3;
}

message UpsertSchemaResponse {
  // Namespace schema containing only the upserted table's schema.
  NamespaceSchema schema = 1;
}

message NamespaceSchema {
  // Renamed to topic_id
  reserved 2;
  reserved "kafka_topic_id";
  // Removed topic ID
  reserved 5;
  reserved "topic_id";
  // Removed query pool ID
  reserved 3;
  reserved "query_pool_id";

  // Namespace ID
  int64 id = 1;
  // Map of Table Name -> Table Schema
  map<string, TableSchema> tables = 4;
}

message TableSchema {
  // Table ID
  int64 id = 1;
  // Map of Column Name -> Column Schema
  map<string, ColumnSchema> columns = 2;
}

message ColumnSchema {
  reserved 2;

  // Column ID
  int64 id = 1;
  // Column type
  influxdata.iox.column_type.v1.ColumnType column_type = 3;
}
