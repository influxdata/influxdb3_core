[workspace]
# In alphabetical order
members = [
    "arrow_util",
    "backoff",
    "client_util",
    "data_types",
    "datafusion_util",
    "executor",
    "flightsql",
    "generated_types",
    "influxdb_influxql_parser",
    "influxdb_iox_client",
    "influxdb_line_protocol",
    "influxdb2_client",
    "iox_http",
    "iox_query_influxql",
    "iox_query",
    "iox_system_tables",
    "iox_time",
    "logfmt",
    "meta_data_cache",
    "metric_exporters",
    "metric",
    "mutable_batch_lp",
    "mutable_batch_lp/fuzz",
    "mutable_batch",
    "object_store_mem_cache",
    "object_store_metrics",
    "observability_deps",
    "panic_logging",
    "parquet_file",
    "predicate",
    "query_functions",
    "schema",
    "service_common",
    "service_grpc_flight",
    "sharder",
    "tokio_metrics_bridge",
    "test_helpers_authz",
    "trace_exporters",
    "trace_http",
    "trace",
    "tracker",
    "trogging",
    "workspace-hack",
]

resolver = "2"

exclude = [
    "*.md",
    "*.txt",
    ".git*",
    ".github/",
    "LICENSE*",
    "massif.out.*",
    "test_bench/",
    "test_fixtures/",
]

[workspace.package]
version = "0.1.0"
authors = ["IOx Project Developers"]
edition = "2021"
license = "MIT OR Apache-2.0"

[workspace.dependencies]
# If you want to use a local checkout of arrow, see the commented-out "Patching Arrow" section below
arrow = { version = "53.0.0", features = ["prettyprint", "chrono-tz"] }
arrow-buffer = { version = "53.0.0" }
arrow-flight = { version = "53.0.0", features = ["flight-sql-experimental"] }
arrow-ipc = { version = "53.0.0" }
# Use DataFusion fork
# See https://github.com/influxdata/arrow-datafusion/pull/53 for contents
# plus additional patches from https://github.com/influxdata/arrow-datafusion/pull/58
datafusion = { git = "https://github.com/influxdata/arrow-datafusion.git", rev = "1c10b8b635831e87cb043a1e3fa8eb89be430d54" }
datafusion-proto = { git = "https://github.com/influxdata/arrow-datafusion.git", rev = "1c10b8b635831e87cb043a1e3fa8eb89be430d54" }
hashbrown = {version = "0.14.5"}
http = {version = "0.2.12"}
http-body = { version = "0.4.6" }
hyper = { version = "0.14.31" }
object_store = { version = "0.11.2", features = ["aws", "azure", "gcp"] }
parquet = {version = "53.0.0", features = ["object_store"] }
pbjson = {version = "0.6.0"}
pbjson-build = {version = "0.6.2"}
pbjson-types = {version = "0.6.0"}
proptest = {version = "1", default-features = false, features = ["std"] }
prost = {version = "0.12.6"}
prost-build = {version = "0.12.6"}
prost-types = {version = "0.12.6"}
reqwest = { version = "0.11", default-features = false }
smallvec = {version = "1.13.2", features = ["union"] }
sqlx = { version = "0.8.2", features = ["sqlite"]}
tower = { version = "0.5" }
tower-http = {version = "0.4", features = ["catch-panic"] }

[workspace.lints.rust]
missing_copy_implementations = "deny"
missing_debug_implementations = "deny"
rust_2018_idioms = { level = "deny", priority = -1 }
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(tokio_unstable)'] }
unreachable_pub = "deny"
unused_crate_dependencies = "deny"

[workspace.lints.clippy]
clone_on_ref_ptr = "deny"
dbg_macro = "deny"
explicit_iter_loop = "deny"
future_not_send = "deny"
todo = "deny"
use_self = "deny"
allow_attributes = "warn"

[workspace.lints.rustdoc]
bare_urls = "deny"
broken_intra_doc_links = "deny"
private_intra_doc_links = "allow"

# This profile optimizes for runtime performance and small binary size at the expense of longer
# build times. It's most suitable for final release builds.
[profile.release]
codegen-units = 16
debug = true
lto = "thin"

[profile.bench]
debug = true

# avoid rebuilds of build dependencies
# See https://github.com/rust-lang/cargo/pull/11252
[profile.dev.build-override]
debug = true

# This profile optimizes for short build times at the expense of larger binary size and slower
# runtime performance. It's most suitable for development iterations.
[profile.quick-release]
inherits = "release"
codegen-units = 16
lto = false
incremental = true

# Per insta docs: https://insta.rs/docs/quickstart/#optional-faster-runs
[profile.dev.package.insta]
opt-level = 3

[profile.dev.package.similar]
opt-level = 3

# Patching Arrow
#
# Assuming you have a local checkout of Arrow in a directory alongside your local checkout of influxdb3_core,
# and you have changes to Arrow in your local checkout that you want to test out with influxdb3_core,
# uncomment this `[patch.crates-io]` section to tell Cargo to use your local arrow versions for all
# transitive dependencies. The entries for the `arrow-*` crates are needed because `datafusion` has
# a direct dependency on them.
#
# WARNING: Do not merge in a PR uncommenting this change! This is for local testing only!
#
# [patch.crates-io]
# arrow = { path = "../arrow-rs/arrow" }
# parquet = { path = "../arrow-rs/parquet" }
# arrow-array = { path = "../arrow-rs/arrow-array" }
# arrow-schema = { path = "../arrow-rs/arrow-schema" }
# arrow-data = { path = "../arrow-rs/arrow-data" }
# arrow-buffer = { path = "../arrow-rs/arrow-buffer" }
# arrow-ipc = { path = "../arrow-rs/arrow-ipc" }

## Use patch of  arrow-rs with an older version of tonic
## until we have upgraded hyper: https://github.com/influxdata/influxdb_iox/issues/9340
## see https://github.com/influxdata/arrow-rs/pull/5
[patch.crates-io]
arrow = { git = "https://github.com/influxdata/arrow-rs.git", rev = "eae176c21b1ef915227294e8a8a201b6f266031a" }
arrow-array = { git = "https://github.com/influxdata/arrow-rs.git", rev = "eae176c21b1ef915227294e8a8a201b6f266031a" }
arrow-buffer = { git = "https://github.com/influxdata/arrow-rs.git", rev = "eae176c21b1ef915227294e8a8a201b6f266031a" }
arrow-cast = { git = "https://github.com/influxdata/arrow-rs.git", rev = "eae176c21b1ef915227294e8a8a201b6f266031a" }
arrow-data = { git = "https://github.com/influxdata/arrow-rs.git", rev = "eae176c21b1ef915227294e8a8a201b6f266031a" }
arrow-ipc = { git = "https://github.com/influxdata/arrow-rs.git", rev = "eae176c21b1ef915227294e8a8a201b6f266031a" }
arrow-schema = { git = "https://github.com/influxdata/arrow-rs.git", rev = "eae176c21b1ef915227294e8a8a201b6f266031a" }
arrow-select = { git = "https://github.com/influxdata/arrow-rs.git", rev = "eae176c21b1ef915227294e8a8a201b6f266031a" }
arrow-string = { git = "https://github.com/influxdata/arrow-rs.git", rev = "eae176c21b1ef915227294e8a8a201b6f266031a" }
arrow-ord = { git = "https://github.com/influxdata/arrow-rs.git", rev = "eae176c21b1ef915227294e8a8a201b6f266031a" }
arrow-flight = { git = "https://github.com/influxdata/arrow-rs.git", rev = "eae176c21b1ef915227294e8a8a201b6f266031a" }
parquet = { git = "https://github.com/influxdata/arrow-rs.git", rev = "eae176c21b1ef915227294e8a8a201b6f266031a" }
object_store = { git = "https://github.com/influxdata/arrow-rs.git", rev = "c946cd81fa12e6588a3be33be08e3d8e9a2770e7" }
