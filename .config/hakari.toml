# This file contains settings for `cargo hakari`.
# See https://docs.rs/cargo-hakari/latest/cargo_hakari/config for a full list of options.

hakari-package = "workspace-hack"

# Format version for hakari's output. Version 4 requires cargo-hakari 0.9.22 or above.
dep-format-version = "4"

# Setting workspace.resolver = "2" in the root Cargo.toml is HIGHLY recommended.
# Hakari works much better with the new feature resolver.
# For more about the new feature resolver, see:
# https://blog.rust-lang.org/2021/03/25/Rust-1.51.0.html#cargos-new-feature-resolver
resolver = "2"

# Add triples corresponding to platforms commonly used by developers here.
# https://doc.rust-lang.org/rustc/platform-support.html
platforms = [
    "x86_64-unknown-linux-gnu",
    "x86_64-apple-darwin",
    "aarch64-apple-darwin",
    "x86_64-pc-windows-msvc",
]

# Write out exact versions rather than a semver range. (Defaults to false.)
# exact-versions = true

# Don't search in these crates for dependencies, and don't have these crates depend on the
# workspace-hack crate.
#
# Lists most bench- or test-only crates. Also lists optional object_store dependencies as those are
# usually off in development, and influxdb_line_protocol which is published to crates.io separately.
[traversal-excludes]
workspace-members = [
    "influxdb_iox_client",
    # influxdb_line_protocol is published as a standalone crate, so don't
    # depend on workspace
    "influxdb-line-protocol",
    "influxdb2_client",
    "iox_data_generator",
    "mutable_batch_tests",
]
third-party = [
    { name = "criterion" },
    { name = "pprof" },
    { name = "tikv-jemalloc-sys" },
]

#
# Packages specified in final-excludes will be removed from the output at the very end.
# This means that any transitive dependencies of theirs will still be included.
#
# Workspace crates excluded from the final output will not depend on the workspace-hack crate,
# and cargo hakari manage-deps will remove dependency edges rather than adding them.
#

[final-excludes]
workspace-members = [
    # We don't want trogging to depend on workspace-hack so it can be used directly from the git repository
    # but we want its tracing-subscriber feature flags to propagate into the workspace-hack
    "trogging"
]
